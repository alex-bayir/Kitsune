---
--- Generated by Luanalysis
--- Created by Аlex Bayir.
--- DateTime: 03.03.2023 23:56
---

version="1.0"
domain="www.mangaread.org"
source="MangaRead"
Type="Manga"
description="Один из лучших каталогов манги. Хорош тем, что на сайте быстро заливают новые главы."
host="https://"..domain
auth_tokens={}

function update(url)
    local e=network:load_as_Document(url):selectFirst("div.site-content")
    local list=e:select("li.wp-manga-chapter")
    local chapters={}; local last=list:size()-1
    for i=last,0,-1 do
        local elem=list:get(i); local href=elem:select("a"):attr("href")
        chapters[last-i]=Chapter.new(num(href:match("vol(%d+)")),num(href), nil,utils:parseDate(elem:select("span"):text(),"dd.MM.yyyy"),utils:to_map({id=href:match("chapter%-(.*)/")}))
    end
    local author={}; local authors=e:select("a[href~=/m-author/]")
    for j=0,authors:size()-1,1 do
        local a=authors:get(j); author[a:attr("title")]=a:attr("abs:href")
    end
    return {
        ["url"]=url,
        ["url_web"]=url,
        ["name"]=e:selectFirst("h1"):text(),
        ["name_alt"]=e:select("div.summary-content"):get(2):text(),
        ["author"]=author,
        ["genres"]=e:select("div.genres-content"):text(),
        ["rating"]=num(e:selectFirst("span.score"):text()),
        ["status"]=e:select("div.post-status"):select("div.summary-content"),
        ["description"]=e:select("div.description-summary"):select("p[style=text-align: left;]"):text(),
        ["thumbnail"]=e:selectFirst("img.img-responsive"):attr("data-src"),
        ["chapters"]=chapters,
        ["similar"]=similar(e:select("div.related-reading-wrap"))
    }
end

function query(name,page,params)
    local url=network:url_builder(host.."/wp-admin/admin-ajax.php")
    local body={
        ["action"]="madara_load_more",
        ["page"]=tostring(page),
        ["template"]="madara-core/content/content-search",
        ["vars[paged]"]="1",
        ["vars[s]"]=name,
        ["vars[template]"]="search",
        ["vars[meta_query][0][s]"]=name,
        ["vars[meta_query][0][template]"]="search",
        ["vars[meta_query][relation]"]="AND",
        ["vars[post_type]"]="wp-manga",
        ["vars[post_status]"]="publish"
    }
    --body["vars[meta_key]"]="_wp_manga_views/_latest_update"
    if(params~=nil and #params>0) then
        if(type(params[1])=="userdata" and Options:equals(params[1]:getClass())) then
            local genres=utils:to_table(params[1]:getSelected())
            if #genres>0 then
                body["vars[tax_query][0][taxonomy]"]="wp-manga-genre"
                local str="term_id"
                for _,v in pairs(genres) do
                    str=str.."&".."vars[tax_query][0][terms][]="..tostring(v)
                end
                body["vars[tax_query][0][field]"]=str
                body["vars[tax_query][relation]"]="AND"
            end
        else

        end
    end
    url=url:build()
    print(url)
    return parse_answer(network:load_as_Document(url,nil,body))
end

function query_url(url,page)
    print(url)
    return parse_answer(network:load_as_Document(url))
end

function parse_answer(document)
    local selects=document:select("div.row.c-tabs-item__content")
    local list={}
    for i=0,selects:size()-1,1 do
        local e=selects:get(i)
        local author={}; local authors=e:select("a[href~=/m-author/]")
        for j=0,authors:size()-1,1 do
            local a=authors:get(j); author[a:attr("title")]=a:attr("abs:href")
        end
        list[i]={
            ["url"]=e:selectFirst("a"):attr("abs:href"),
            ["url_web"]=e:selectFirst("a"):attr("abs:href"),
            ["name"]=utils:text(e:selectFirst("h3.h4")),
            ["name_alt"]=utils:text(e:select("div.mg_alternative"):select("div.summary-content")),
            ["author"]=author,
            ["genres"]=utils:text(e:select("div.mg_genres"):select("div.summary-content"),""):gsub(" ",", "),
            ["rating"]=num(utils:text(e:selectFirst("span.score"))),
            ["status"]=utils:text(e:select("div.mg_status"):select("div.summary-content")),
            ["thumbnail"]=e:selectFirst("img[class*=lazyload]"):attr("data-src")
        }
    end
    return list
end

function getPages(url,chapter) -- table <Page>
    local elements=network:load_as_Document(url.."chapter-"..chapter["id"]):select("img.wp-manga-chapter-img")
    local pages={}
    for i=0,elements:size()-1,1 do
        pages[i]=Page.new(i+1,elements:get(i):attr("data-src"):match("(http.*)"))
    end
    return pages
end

function createAdvancedSearchOptions() -- table <Options>
    return {}
end

function similar(elements)
    local similar={}; local n=0
    for i=0,(elements~=nil and elements:size() or 0)-1,1 do
        local e=elements:get(i):selectFirst("a")
        local img=e and e:selectFirst("img")
        similar[n]=img and {
            ["url"]=e:attr("abs:href"),
            ["url_web"]=e:attr("abs:href"),
            ["name"]=e:attr("title"),
            ["name_alt"]=e:attr("title"),
            ["thumbnail"]=img:attr("data-src")
        }
        n=n+(img and 1 or 0)
    end
    return similar
end
