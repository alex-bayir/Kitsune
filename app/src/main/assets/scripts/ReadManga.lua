---
--- Generated by Luanalysis
--- Created by Аlex Bayir.
--- DateTime: 09.01.2022 19:08
---
Wrapper=luajava.bindClass("org.alex.kitsune.manga.Wrapper")
Chapter=luajava.bindClass("org.alex.kitsune.manga.Chapter")
Page=luajava.bindClass("org.alex.kitsune.manga.Page")
Options=luajava.bindClass("org.alex.kitsune.manga.search.Options")
UrlBuilder=luajava.bindClass("org.alex.kitsune.commons.URLBuilder")
JSONObject=luajava.bindClass("org.json.JSONObject")
JSONArray=luajava.bindClass("org.json.JSONArray")
ArrayList=luajava.bindClass("java.util.ArrayList")
Map_class=luajava.bindClass("java.util.TreeMap")

version="1.2"
provider="readmanga.live"
providerName="ReadManga"
sourceDescription="Один из самых популярных источников манги в СНГ."
host="https://"..provider
auth_tokens={"JSESSIONID"}

Filters={["Высокий рейтинг"]="s_high_rate", ["Переведено"]="s_translated", ["Завершённая"]="s_completed",["Для взрослых"]="s_mature",["Сингл"]="s_single",["Длинная"]="s_many_chapters",["Ожидает загрузки"]="s_wait_upload",["Продаётся"]="s_sale"}
filters={[1]="s_high_rate"}
Genres={["Боевик"]="el_2155",["Боевые искусства"]="el_2143",["Гарем"]="el_2142",["Гендерная интрига"]="el_2156",["Героическое фэнтези"]="el_2146",["Детектив"]="el_2152",["Дзёсэй"]="el_2158",["Драма"]="el_2118",["Игра"]="el_2154",["История"]="el_2119",["Исэкай"]="el_9450",["Киберпанк"]="el_8032",["Кодомо"]="el_2137",["Комедия"]="el_2136",["Махо-сёдзё"]="el_2147",["Меха"]="el_2126",["Научная фантастика"]="el_2133",["Повседневность"]="el_2135",["Постапокалиптика"]="el_2151",["Приключения"]="el_2130",["Психология"]="el_2144",["Романтика"]="el_2121",["Самурайский боевик"]="el_2124",["Сверхъестественное"]="el_2159",["Сёдзё"]="el_2122",["Сёдзё-ай"]="el_2128",["Сёнэн"]="el_2134",["Сёнэн-ай"]="el_2139",["Спорт"]="el_2129",["Сэйнэн"]="el_2138",["Сянься"]="el_9561",["Трагедия"]="el_2153",["Триллер"]="el_2150",["Ужасы"]="el_2125",["Уся"]="el_9560",["Фэнтези"]="el_2131",["Школа"]="el_2127",["Этти"]="el_2149",["Юри"]="el_2123"}
Tags={["Насилие"]="9516",["Вдова/Вдовец"]="9637",["Семья"]="9602",["Завоевание мира"]="9494",["Вестерн"]="9470",["Апокалипсис"]="9461",["Секты"]="9582",["Кулинария"]="9502",["Система"]="9538",["Секс на одну ночь"]="9635",["Подземелья"]="9526",["Дружба"]="9491",["Дворянство"]="9568",["Разумные расы"]="9532",["Супергерои"]="9544",["Жестокий мир"]="9492",["Обратный гарем"]="9521",["Животные-компаньоны"]="9493",["Умный ГГ"]="9546",["Шантаж"]="9551",["Умерший член семьи"]="9604",["Эльфы"]="9552",["Выживание"]="9479",["Деревня"]="9588",["Несчастный случай"]="9606",["Ведьма"]="9469",["Броманс"]="9566",["Разница в возрасте"]="9571"}

function update(url) -- Wrapper
    local e=Wrapper:loadDocument(url):selectFirst("div.leftContent")
    local list=e:select("table.table-hover"):select("tr")
    local chapters=ArrayList.new(list:size())
    for i=list:size()-1,0,-1 do
        local tmp=list:get(i)
        local href=tmp:selectFirst("a"):attr("href")
        chapters:add(Chapter.new(num(href:match("%d+")),num(href:match("/vol(%d+)")),num(href:match("/vol%d+/(%d*%.?%d*)")), tmp:select("td"):first():text():match("%d+%s%-%s%d+%s+(.+)"),Wrapper:parseDate(tmp:select("td"):last():attr("data-date"),"dd.MM.yy")))
    end
    return Wrapper.new(
            url,
            0,
            Wrapper:text(e:selectFirst("span.eng-name"),e:selectFirst("span.name"):text()),
            Wrapper:text(e:selectFirst("span.name")),
            Wrapper:text(e:select("span.elem_author")),
            Wrapper:attr(e:select("span.elem_author"):select("a"),"abs:href"),
            Wrapper:text(e:select("span.elem_genre"),""):gsub(" ,",","),
            num(e:selectFirst("span.rating-block"):attr("data-score")),
            Wrapper:text(e:select("div.subject-meta"):select("p"):get(1)),
            Wrapper:text(e:selectFirst("div.manga-description")),
            e:selectFirst("div.picture-fotorama"):selectFirst("img"):attr("src"),
            url,
            chapters,
            similar(e:select("div[class~=(tile|simple-tile)]"))
    )
end

function query(name,page,params) -- java.util.ArrayList<Wrapper>
    local url=UrlBuilder.new(host.."/search/advanced")
    url:addParam("q",name)
    url:addParam("page",page+1)
    if(params~=nil and #params>0) then
        if(type(params[1])=="userdata" and Options:equals(params[1]:getClass())) then
            url:addParams(params[1]:getSelected(),"in"):addParams(params[1]:getDeselected(),"ex")
            if(#params>1) then url:addParams("many-el_40",params[2]:getSelected()) end
            if(#params>2) then url:addParams(params[3]:getSelected(),"in"):addParams(params[3]:getDeselected(),"ex") end
        else
            url:addParam(filters[params[1]],"in")
        end
    end
    url=url:getUrl()
    if(name~=nil and name:match("[a-z]://[^ >,;]*")~=nil) then url=name; end
    print(url)
    local selects=Wrapper:loadDocument(url):select("div.tile")
    local list=ArrayList.new(selects:size())
    for i=0,selects:size()-1,1 do
        local e=selects:get(i)
        if(e:selectFirst("a.non-hover")~=nil) then
            list:add(Wrapper.new(
                    e:selectFirst("a.non-hover"):attr("abs:href"),
                    0,
                    Wrapper:text(e:selectFirst("h4"),Wrapper:text(e:selectFirst("h3"))),
                    Wrapper:text(e:selectFirst("h3")),
                    Wrapper:text(e:select("a.person-link"),""):gsub(" ,",","),
                    Wrapper:attr(e:selectFirst("a.person-link"),"abs:href"),
                    Wrapper:text(e:select("a.element-link"),""):gsub(" ",", "),
                    num(Wrapper:attr(e:selectFirst("div.rating"),"title",""):match("(.-)%s"))/2,
                    0,
                    Wrapper:text(e:selectFirst("div.manga-description")),
                    e:selectFirst("img.lazy"):attr("data-original")
            ))
        end
    end
    return list
end

function getPages(url,chapter) -- ArrayList<Page>
    local array=JSONArray.new(Wrapper:loadDocument(url.."/vol"..chapter.vol.."/"..chapter.num.."?mtr=1"):select("script"):toString():match("rm_h.initReader.*(%[%[.*%]%])"):gsub("\'","\""))
    local pages=ArrayList.new(array:length())
    for i=0,array:length()-1,1 do
        local ja=array:getJSONArray(i)
        pages:add(Page.new(0,i+1,ja:getString(0)..ja:getString(2)))
    end
    return pages
end

function createAdvancedSearchOptions() -- ArrayList<Options>
    local options=ArrayList.new()
    options:add(Options.new("Жанры",convert(Genres),2))
    options:add(Options.new("Теги",convert(Tags),1))
    options:add(Options.new("Фильтры",convert(Filters),2))
    return options
end

function convert(luaTable)
    local javaTable=Map_class.new()
    for key,value in pairs(luaTable) do javaTable:put(key,value) end
    return javaTable
end

function num(n) return n==nil and 0 or tonumber(n:match("[0-9]*%.?[0-9]+")) end

function similar(elements)
    local similar=ArrayList.new()
    for i=0,(elements~=nil and elements:size() or 0)-1,1 do
        local e=elements:get(i):selectFirst("a")
        if(e~=nil) then
            local img=e:selectFirst("img.lazy")
            if(img~=nil) then
                similar:add(Wrapper.new(
                        e:attr("abs:href"),
                        0,
                        img:attr("alt"),
                        img:attr("title"),
                        nil,
                        nil,
                        nil,
                        0,
                        nil,
                        nil,
                        img:attr("data-original")
                ))
            end
        end
    end
    return similar
end