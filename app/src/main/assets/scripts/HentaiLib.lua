---
--- Generated by Luanalysis
--- Created by Аlex Bayir.
--- DateTime: 18.01.2023 21:22
---
Wrapper=luajava.bindClass("org.alex.kitsune.manga.Wrapper")
Chapter=luajava.bindClass("org.alex.kitsune.manga.Chapter")
Page=luajava.bindClass("org.alex.kitsune.manga.Page")
Options=luajava.bindClass("org.alex.kitsune.manga.search.Options")
UrlBuilder=luajava.bindClass("org.alex.kitsune.commons.URLBuilder")
JSONObject=luajava.bindClass("org.json.JSONObject")
JSONArray=luajava.bindClass("org.json.JSONArray")
ArrayList=luajava.bindClass("java.util.ArrayList")
Map_class=luajava.bindClass("java.util.TreeMap")

version="1.3"
provider="hentailib.me"
providerName="HentaiLib"
sourceDescription="Один из самых популярных источников манги в СНГ."
host="https://"..provider
auth_tokens={"remember_web_59ba36addc2b2f9401580f014c7f58ea4e30989d"}

Sorts={["По рейтингу"]="rate", ["По названию"]="name", ["По дате обновлениям"]="last_chapter_at",["По дате добавления"]="created_at",["По просмотрам"]="views",["По количеству глав"]="chap_count"}
sorts={[1]="rate",[2]="created_at",[3]="last_chapter_at"}
Order={["По убыванию"]="desc",["По возрастанию"]="asc"}
Genres={["Арт"]="32",["Безумие"]="91",["Боевик"]="34",["Боевые искусства"]="35",["Вампиры"]="36",["Военное"]="89",["Гарем"]="37",["Гендерная интрига"]="38",["Героическое фэнтези"]="39",["Демоны"]="81",["Детектив"]="40",["Дзёсэй"]="41",["Драма"]="43",["Игра"]="44",["Исекай"]="79",["История"]="45",["Киберпанк"]="46",["Кодомо"]="76",["Комедия"]="47",["Космос"]="83",["Магия"]="85",["Махо-сёдзё"]="48",["Машины"]="90",["Меха"]="49",["Мистика"]="50",["Музыка"]="80",["Научная фантастика"]="51",["Омегаверс"]="77",["Пародия"]="86",["Повседневность"]="52",["Полиция"]="82",["Постапокалиптика"]="53",["Приключения"]="54",["Психология"]="55",["Романтика"]="56",["Самурайский боевик"]="57",["Сверхъестественное"]="58",["Сёдзё"]="59",["Сёдзё-ай"]="60",["Сёнэн"]="61",["Сёнэн-ай"]="62",["Спорт"]="63",["Супер сила"]="87",["Сэйнэн"]="64",["Трагедия"]="65",["Триллер"]="66",["Ужасы"]="67",["Фантастика"]="68",["Фэнтези"]="69",["Хэнтай"]="84",["Школа"]="70",["Эротика"]="71",["Этти"]="72",["Юри"]="73",["Яой"]="74"}
Tags={["3D"]="1",["DILF"]="363",["Defloration"]="287",["FPP(Вид от первого лица)"]="289",["Footfuck"]="5",["Footjob"]="6",["Handjob"]="7",["Lactation"]="284",["Living clothes"]="290",["Mind break"]="9",["Scat"]="13",["Selfcest"]="286",["Shemale"]="220",["Tomboy"]="14",["Unbirth"]="283",["Vore"]="367",["X-Ray"]="15",["Алкоголь"]="16",["Анал"]="17",["Андроид"]="18",["Анилингус"]="19",["Анимация (GIF)"]="350",["Арт"]="20",["Артбук"]="364",["Ахэгао"]="2",["БДСМ"]="22",["Бакуню"]="21",["Бара"]="293",["Без проникновения"]="336",["Без текста"]="23",["Без трусиков"]="24",["Без цензуры"]="25",["Беременность"]="26",["Бикини"]="27",["Близнецы"]="28",["Больница"]="30",["Большая грудь"]="31",["Большая попка"]="32",["Борьба"]="33",["Буккакэ"]="34",["В бассейне"]="35",["В ванной"]="36",["В государственном учреждении"]="37",["В общественном месте"]="38",["В очках"]="8",["В первый раз"]="39",["В транспорте"]="40",["Вампиры"]="41",["Вибратор"]="42",["Втроём"]="43",["Гипноз"]="44",["Глубокий минет"]="45",["Горячий источник"]="46",["Групповой секс"]="47",["Гуро"]="307",["Гяру и Гангуро"]="48",["Двойное проникновение"]="49",["Девочки-волшебницы"]="50",["Девушка-туалет"]="51",["Демон"]="52",["Дилдо"]="53",["Домохозяйка"]="54",["Дыра в стене"]="55",["Жестокость"]="56",["Золотой дождь"]="57",["Зомби"]="58",["Зоофилия"]="351",["Зрелые женщины"]="59",["Избиение"]="223",["Измена"]="60",["Изнасилование"]="61",["Инопланетяне"]="62",["Инсеки"]="366",["Инцест"]="63",["Исполнение желаний"]="64",["Историческое"]="65",["Камера"]="66",["Кляп"]="288",["Колготки"]="67",["Косплей"]="68",["Кримпай"]="3",["Куннилингус"]="69",["Купальники"]="70",["ЛГБТ"]="343",["Латекс и кожа"]="71",["Магия"]="72",["Маленькая грудь"]="73",["Мастурбация"]="74",["Медсестра"]="221",["Мейдочка"]="75",["Мерзкий дядька"]="76",["Милф"]="77",["Много девушек"]="78",["Много спермы"]="79",["Молоко"]="80",["Монашка"]="353",["Монстродевушки"]="81",["Монстры"]="82",["Мочеиспускание"]="83",["На природе"]="84",["Наблюдение"]="85",["Насекомые"]="285",["Небритая киска"]="86",["Небритые подмышки"]="87",["Нетораре"]="88",["Нэтори"]="11",["Обмен телами"]="89",["Обычный секс"]="90",["Огромная грудь"]="91",["Огромный член"]="92",["Омораси"]="93",["Оральный секс"]="94",["Орки"]="95",["Остановка времени"]="296",["Оякодон"]="359",["Пайзури"]="96",["Парень пассив"]="97",["Переодевание"]="98",["Пирсинг"]="308",["Пляж"]="99",["Повседневность"]="100",["Подвязки"]="282",["Подглядывание"]="101",["Подчинение"]="102",["Похищение"]="103",["Превозмогание"]="104",["Принуждение"]="105",["Прозрачная одежда"]="106",["Проституция"]="107",["Психические отклонения"]="108",["Публично"]="109",["Пытки"]="224",["Пьяные"]="110",["Рабы"]="356",["Рабыни"]="111",["С Сюжетом"]="337",["Сuminside"]="4",["Секс-игрушки"]="112",["Сексуально возбуждённая"]="113",["Сибари"]="114",["Спортивная форма"]="117",["Спортивное тело"]="335",["Спящие"]="118",["Страпон"]="119",["Суккуб"]="120",["Татуировки"]="29",["Темнокожие"]="121",["Тентакли"]="122",["Толстушки"]="123",["Трагедия"]="124",["Трап"]="125",["Ужасы"]="126",["Униформа"]="127",["Учитель / ученик"]="352",["Ушастые"]="128",["Фантазии"]="129",["Фемдом"]="130",["Фестиваль"]="131",["Фетиш"]="132",["Фистинг"]="133",["Фурри"]="134",["Футанари"]="136",["Футанари имеет парня"]="137",["Цельный купальник"]="138",["Цундэрэ"]="139",["Чикан"]="140",["Чулки"]="141",["Шимайдон"]="365",["Шлюха"]="142",["Эксгибиционизм"]="143",["Эльф"]="144",["Юные"]="145",["Яндэрэ"]="146"}
function update(url) -- Wrapper
    local doc=Wrapper:loadDocument(url)
    local json=JSONObject.new(doc:select("script"):toString():match("window.__DATA__ = (%b{})"))
    local ui=json:getJSONObject("user"):optInt("id",-1); if(ui==-1) then ui=nil end
    local jo=json:getJSONObject("manga")
    local container=doc:selectFirst("div.media-container")
    local genres=container:select("a.media-tag-item") local str="" for i=0,genres:size()-1,1 do str=str..", "..genres:get(i):text() end genres=str:sub(3)
    local list=json:getJSONObject("chapters"):getJSONArray("list")
    local chapters=ArrayList.new(list:length())
    local branches=json:getJSONObject("chapters"):getJSONArray("branches")
    local translaters={}
    for i=0,(branches~=nil and branches:length() or 0)-1,1 do
        local jobj=branches:getJSONObject(i)
        local teams=jobj:getJSONArray("teams")
        for j=0,(teams~=nil and teams:length() or 0)-1,1 do
            jobj=teams:getJSONObject(j)
            translaters[jobj:getInt("branch_id")]=jobj:getString("name")
        end
    end
    for i=list:length()-1,0,-1 do
        local jobj=list:getJSONObject(i); local branch_id=jobj:optInt("branch_id",-1); if(branch_id==-1) then branch_id=nil end
        chapters:add(Chapter.new(jobj,"chapter_id","chapter_volume","chapter_number","chapter_name", "chapter_created_at","yyyy-MM-dd' 'HH:mm:ss",convert({["translater"]=translaters[branch_id],["bid"]=branch_id,["ui"]=ui})))
    end
    local author=container:selectFirst("a[abs:href*=/people/]")
    return Wrapper.new(
            url,
            jo:getInt("id"),
            jo:getString("name"),
            jo:getString("rusName"),
            Wrapper:text(author),
            Wrapper:attr(author,"abs:href"),
            genres,
            num(container:selectFirst("div.media-rating__value"):text()),
            jo:optInt("status"),
            Wrapper:attr(container:selectFirst("div.media-section_info"):getElementsByAttributeValue("itemprop","description"):first(),"content"),
            container:selectFirst("div.media-sidebar__cover.paper"):selectFirst("img"):attr("src"),
            url,
            Wrapper:uniqueChapters(chapters,true),
            similar(container:select("div.media-slider__item"))
    )
end
function query(name,page,params) -- java.util.ArrayList<Wrapper>
    local url=UrlBuilder.new(host.."/manga-list")
    url:add("name",name)
    url:add("page",page+1)
    if(params~=nil and #params>0) then
        if(type(params[1])=="userdata" and Options:equals(params[1]:getClass())) then
            url:add("sort",params[1]:getSelected()[1])
            url:add("dir",params[1]:getTitleSortSelected())
            if(#params>1) then url:add("genres[include][]",params[2]:getSelected()):add("genres[exclude][]",params[2]:getDeselected()) end
            if(#params>2) then url:add("tags[include][]",params[3]:getSelected()):add("tags[exclude][]",params[3]:getDeselected()) end
        else
            url:add("sort",sorts[params[1]])
        end
    end
    url=url:build()
    if(name~=nil and name:match("[a-z]://[^ >,;]*")~=nil) then url=name; end
    print(url)
    local selects=Wrapper:loadDocument(url):selectFirst("div.media-cards-grid"):select("div.media-card-wrap")
    local list=ArrayList.new(selects:size())
    for i=0,selects:size()-1,1 do
        local e=selects:get(i)
        local f=e:selectFirst("a.media-card")
        list:add(Wrapper.new(
                f:attr("abs:href"),
                num(f:attr("data-media-id")),
                Wrapper:text(e:selectFirst("h3")),
                Wrapper:text(e:selectFirst("h3")),
                nil,
                nil,
                nil,
                0,
                nil,
                nil,
                (select(1,f:attr("data-src"):gsub("^/",host.."/")))
        ))
    end
    return list
end
function getPages(url,chapter) -- ArrayList<Page>
    local scripts=Wrapper:loadDocument(UrlBuilder.new(url.."/v"..chapter.vol.."/c"..chapter.num):add("page",1):add(chapter.info):build()):select("script")
    local json=JSONObject.new(scripts:toString():match("window.__info = (.-);"))
    local array=JSONArray.new(scripts:toString():match("window.__pg = (.-);"))
    local domain=json:getJSONObject("servers"):getString("main").."/"..json:getJSONObject("img"):getString("url")
    local pages=ArrayList.new(array:length())
    for i=0,array:length()-1,1 do
        local jo=array:getJSONObject(i)
        pages:add(Page.new(0,jo:getInt("p"),domain..jo:getString("u")))
    end
    return pages
end
function createAdvancedSearchOptions() -- ArrayList<Options>
    local options=ArrayList.new()
    options:add(Options.new("Сортировка","desc","asc",convert(Sorts),0))
    options:add(Options.new("Жанры",convert(Genres),2))
    options:add(Options.new("Теги",convert(Tags),2))
    return options
end

function convert(luaTable)
    local javaTable=Map_class.new()
    for key,value in pairs(luaTable) do javaTable:put(key,value) end
    return javaTable
end

function num(n) return n==nil and 0 or tonumber(n:match("[0-9]*%.?[0-9]+")) end

function similar(elements)
    local similar=ArrayList.new()
    for i=0,(elements~=nil and elements:size() or 0)-1,1 do
        local e=elements:get(i):selectFirst("a")
        if(e~=nil) then
            similar:add(Wrapper.new(
                    e:attr("abs:href"),
                    0,
                    e:attr("title"),
                    e:attr("title"),
                    nil,
                    nil,
                    nil,
                    0,
                    nil,
                    nil,
                    (select(1,e:selectFirst("div.manga-list-item__cover"):attr("style"):match("url%((.*)%)"):gsub("^/",host.."/")))
            ))
        end
    end
    return similar
end