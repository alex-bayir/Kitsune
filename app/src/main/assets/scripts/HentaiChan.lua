---
--- Generated by Luanalysis
--- Created by А.
--- DateTime: 22.03.2022 13:49
---

version="1.5"
domains={"xxxxx.hentaichan.live","xxxx.hentaichan.live","y.hentaichan.live"}
domain=domains[1]
source="HentaiChan"
Type="Manga"
description="Самый известный каталог хентая. Пожалуйста отключите этот источник если вам меньше 18."
host="https://"..domain
auth_tokens={"PHPSESSID"}
icon=host.."/favicon.png"

Genres={["3D"]="3D",["action"]="action",["ahegao"]="ahegao",["bdsm"]="bdsm",["corruption"]="corruption",["foot fetish"]="foot_fetish",["footfuck"]="footfuck",["gender bender"]="gender_bender",["live"]="live",["lolcon"]="lolcon",["megane"]="megane",["mind break"]="mind_break",["monstergirl"]="monstergirl",["netorare"]="netorare",["netori"]="netori",["nipple penetration"]="nipple_penetration",["oyakodon"]="oyakodon",["paizuri (titsfuck)"]="paizuri_(titsfuck)",["rpg"]="rpg",["scat"]="scat",["shemale"]="shemale",["shooter"]="shooter",["simulation"]="simulation",["skinsuit"]="skinsuit",["tomboy"]="tomboy",["x-ray"]="x-ray",["алкоголь"]="алкоголь",["анал"]="анал",["андроид"]="андроид",["анилингус"]="анилингус",["анимация"]="анимация",["аркада"]="аркада",["арт"]="арт",["бабушка"]="бабушка",["без текста"]="без_текста",["без трусиков"]="без_трусиков",["без цензуры"]="без_цензуры",["беременность"]="беременность",["бикини"]="бикини",["близнецы"]="близнецы",["боди-арт"]="боди-арт",["больница"]="больница",["большая грудь"]="большая_грудь",["большие попки"]="большие_попки",["бондаж"]="бондаж",["буккаке"]="буккаке",["в ванной"]="в_ванной",["в общественном месте"]="в_общественном_месте",["в первый раз"]="в_первый_раз",["в цвете"]="в_цвете",["в школе"]="в_школе",["вампиры"]="вампиры",["веб"]="веб",["вебкам"]="вебкам",["вибратор"]="вибратор",["визуальная новелла"]="визуальная_новелла",["внучка"]="внучка",["волосатые женщины"]="волосатые_женщины",["гаремник"]="гаремник",["гг девушка"]="гг_девушка",["гг парень"]="гг_парень",["гипноз"]="гипноз",["глубокий минет"]="глубокий_минет",["горничные"]="горничные",["горячий источник"]="горячий_источник",["грудастая лоли"]="грудастая_лоли",["групповой секс"]="групповой_секс",["гяру и гангуро"]="гяру_и_гангуро",["двойное проникновение"]="двойное_проникновение",["девочки волшебницы"]="девочки_волшебницы",["девушка туалет"]="девушка_туалет",["демоны"]="демоны",["дилдо"]="дилдо",["дочь"]="дочь",["драма"]="драма",["дыра в стене"]="дыра_в_стене",["жестокость"]="жестокость",["за деньги"]="за_деньги",["зомби"]="зомби",["зрелые женщины"]="зрелые_женщины",["измена"]="измена",["изнасилование"]="изнасилование",["инопланетяне"]="инопланетяне",["инцест"]="инцест",["исполнение желаний"]="исполнение_желаний",["камера"]="камера",["квест"]="квест",["кимоно"]="кимоно",["колготки"]="колготки",["комиксы"]="комиксы",["косплей"]="косплей",["кремпай"]="кремпай",["кудере"]="кудере",["кузина"]="кузина",["куннилингус"]="куннилингус",["купальники"]="купальники",["латекс и кожа"]="латекс_и_кожа",["магия"]="магия",["маленькая грудь"]="маленькая_грудь",["мастурбация"]="мастурбация",["мать"]="мать",["мейдочки"]="мейдочки",["мерзкий дядька"]="мерзкий_дядька",["минет"]="минет",["много девушек"]="много_девушек",["молоко"]="молоко",["монашки"]="монашки",["монстры"]="монстры",["мочеиспускание"]="мочеиспускание",["мужская озвучка"]="мужская_озвучка",["мужчина крепкого телосложения"]="мужчина_крепкого_телосложения",["мускулистые женщины"]="мускулистые_женщины",["на природе"]="на_природе",["наблюдение"]="наблюдение",["непрямой инцест"]="непрямой_инцест",["новелла"]="новелла",["обмен партнерами"]="обмен_партнерами",["обмен телами"]="обмен_телами",["обычный секс"]="обычный_секс",["огромная грудь"]="огромная_грудь",["огромный член"]="огромный_член",["остановка времени"]="остановка_времени",["парень пассив"]="парень_пассив",["переодевание"]="переодевание",["песочница"]="песочница",["племянница"]="племянница",["пляж"]="пляж",["подглядывание"]="подглядывание",["подчинение"]="подчинение",["похищение"]="похищение",["презерватив"]="презерватив",["принуждение"]="принуждение",["прозрачная одежда"]="прозрачная_одежда",["проникновение в матку"]="проникновение_в_матку",["психические отклонения"]="психические_отклонения",["публично"]="публично",["рабыни"]="рабыни",["романтика"]="романтика",["сверхъестественное"]="сверхъестественное",["секс игрушки"]="секс_игрушки",["сестра"]="сестра",["сетакон"]="сетакон",["скрытный секс"]="скрытный_секс",["спортивная форма"]="спортивная_форма",["спящие"]="спящие",["страпон"]="страпон",["суккубы"]="суккубы",["темнокожие"]="темнокожие",["тентакли"]="тентакли",["толстушки"]="толстушки",["трап"]="трап",["тётя"]="тётя",["умеренная жестокость"]="умеренная_жестокость",["учитель и ученик"]="учитель_и_ученик",["ушастые"]="ушастые",["фантазии"]="фантазии",["фантастика"]="фантастика",["фемдом"]="фемдом",["фестиваль"]="фестиваль",["фистинг"]="фистинг",["фурри"]="фурри",["футанари"]="футанари",["футанари имеет парня"]="футанари_имеет_парня",["фэнтези"]="фэнтези",["хоррор"]="хоррор",["цундере"]="цундере",["чикан"]="чикан",["чирлидеры"]="чирлидеры",["чулки"]="чулки",["школьная форма"]="школьная_форма",["школьники"]="школьники",["школьницы"]="школьницы",["школьный купальник"]="школьный_купальник",["щекотка"]="щекотка",["эксгибиционизм"]="эксгибиционизм",["эльфы"]="эльфы",["эччи"]="эччи",["юмор"]="юмор",["юри"]="юри",["яндере"]="яндере",["яой"]="яой"}
Sorts={["Популярность"]="fav",["Дата"]="date",["Алфавит"]="abc"}
sorts={[1]="fav",[2]="date",[3]=nil}
Order={["По убыванию"]="desc",["По возрастанию"]="asc"}

function set_domain(new_domain)
    domain=new_domain
    host="https://"..domain
    icon=host.."/favicon.png"
end

function update(url)
    url=url:gsub("https?:[\\/][\\/][^\\/]+",host)
    local e=network:load_as_Document(url):body():selectFirst("div.main_fon")
    local list=network:load_as_Document((url:gsub("manga/","online/"))):select("select#related"):select("option")
    local chapters={}; local n=0
    for i=0,list:size()-1,1 do
        local el=list:get(i); local str=el:attr("value")
        if(str:match("-(%a[-%a]+%a)")==url:match("-(%a[-%a]+%a)")) then
            chapters[n]={num=num(str:match("%-(%d*%.?%d+)")),id=num(str:match("%d+"))}; n=n+1
        end
    end
    if(#chapters==0) then chapters[0]={name="Сингл",id=num(url:match("%d+"))} end
    local author={}; local authors=e:select("a[href~=/mangaka/\\d+]")
    for j=0,authors:size()-1,1 do
        local a=authors:get(j); author[a:attr("title")]=a:attr("abs:href")
    end
    return {
        ["url"]=url,
        ["url_web"]=url,
        ["name"]=utils:text(e:selectFirst("a.title_top_a"),""):gsub(" - часть %d+",""):gsub(" - глава %d+",""):match("([a-zA-Z][^а-яА-Я]*[a-zA-Z])"),
        ["name_alt"]=utils:text(e:selectFirst("a.title_top_a"),""):gsub(" - часть %d+",""):gsub(" - глава %d+",""):match("([а-яА-Я].*[а-яА-Я])"),
        ["author"]=author,
        ["genres"]=utils:attr(e:select("li.sidetag"):select("a[href*=/tags/-]"),"href","",", "):gsub("/tags/%-",""):gsub("_"," "),
        ["status"]=(#chapters>1 and "Finished" or "Announce"),
        ["description"]=utils:text(e:selectFirst("div#description")),
        ["thumbnail"]=utils:attr(e:selectFirst("img#cover"),"src"),
        ["chapters"]=chapters
    }
end

function query(name,page,params)
    local url;
    if(name~=nil and name:len()>0) then
        url=network:url_builder(host.."/"):add("do","search"):add("subaction","search"):add("story",name):add("offset",page>0 and (page+1)*10 or nil):build();
    else
        if(params~=nil and #params>0 and type(params[1])=="userdata" and Options:equals(params[1]:getClass()))then
            if(params~=nil and #params>0) then
                url=host.."/manga&n="..params[1]:getSelected()[1]..params[1]:getTitleSortSelected()
                s=params[2]~=nil and params[2]:getSelected() or nil
                d=params[2]~=nil and params[2]:getDeselected() or nil
                if((s~=nil and #s>0) or (d~=nil and #d>0)) then
                    url=host.."/tags/"; local b=false
                    for i=1,(s~=nil and #s or 0),1 do
                        url=url..(b and "+" or "")..s[i]; b=true
                    end
                    for i=1,(d~=nil and #d or 0),1 do
                        url=url..(b and "+-" or "")..d[i]; b=true
                    end
                    url=url.."&sort=manga".."&n="..params[1]:getSelected()[1]..params[1]:getTitleSortSelected()
                end
            end
        elseif(params~=nil and #params>0)then
            url=sorts[params[1]]~=nil and host.."/manga/new&n="..sorts[params[1]] or host.."/manga/random"
        end
        url=url~=nil and url..(page>0 and ("?offset="..((page+1)*10)) or "")
    end
    if(name~=nil and name:match("[a-z]://[^ >,;]*")~=nil) then url=name; end
    return query_url(url)
end

function query_url(url,page)
    if page then url=url:find("page") and url:gsub("offset=%d+","offset="..tostring((page+1)*10)) or url.."&offset="..tostring((page+1)*10) end
    print(url)
    local selects=network:load_as_Document(url):select("div.content_row")
    local list={}; local n=0
    for i=0,selects:size()-1,1 do
        local e=selects:get(i)
        if(utils:attr(e:selectFirst("h2"):selectFirst("a"),"href"):match("/manga.*")) then
            local author={}; local authors=e:select("a[href~=/mangaka/\\d+]")
            for j=0,authors:size()-1,1 do
                local a=authors:get(j); author[a:attr("title")]=a:attr("abs:href")
            end
            list[n]={
                ["url"]=utils:attr(e:selectFirst("h2"):selectFirst("a"),"abs:href"),
                ["url_web"]=utils:attr(e:selectFirst("h2"):selectFirst("a"),"abs:href"),
                ["name"]=utils:text(e:selectFirst("h2"),""):gsub(" - часть %d+",""):gsub(" - глава %d+",""):match("([a-zA-Z][^а-яА-Я]*[a-zA-Z])"),
                ["name_alt"]=utils:text(e:selectFirst("h2"),""):gsub(" - часть %d+",""):gsub(" - глава %d+",""):match("([а-яА-Я].*[а-яА-Я])"),
                ["author"]=author,
                ["genres"]=utils:text(e:select("div.genre"),""):gsub("_"," "),
                ["description"]=utils:text(e:select("div.tags")),
                ["thumbnail"]=select(1, utils:attr(e:selectFirst("img"),"src"):gsub("_blur",""))
            }
            n=n+1
        end
    end
    return list
end

function getPages(url,chapter)
    local array=JSONArray:create(network:load_as_Document(host.."/online/"..chapter["id"]..url:match("%d+(.*)%d*%.")..chapter["num"]..".html"):select("script"):toString():match("\"fullimg\":%s*(%[.-%])"):gsub("'","\""))
    local pages={}
    for i=0,array:size()-1,1 do
        pages[i]={["page"]=i+1,["data"]=array:getString(i)}
    end
    return pages
end

function load(file,data,url,cancel,process)
    return network:load(network:getClient(),data,domain,file,cancel,process)
end

function createAdvancedSearchOptions()
    return {
        {mode=0,title="Сортировка",desc="desc",asc="asc",values=Sorts},
        {mode=2,title="Жанры",values=Genres}
    }
end

function loadSimilar(manga)
    local elements=network:load_as_Document((manga["url"]:gsub("manga/","related/"))):select("div.related")
    local similar={}; local n=0
    for i=0,(elements~=nil and elements:size() or 0)-1,1 do
        local e=elements:get(i)
        similar[n]=e and {
            ["url"]=utils:attr(e:selectFirst("h2"):selectFirst("a"),"abs:href"),
            ["url_web"]=utils:attr(e:selectFirst("h2"):selectFirst("a"),"abs:href"),
            ["name"]=utils:text(e:selectFirst("h2"),""):match("[a-zA-Z].*[a-zA-Z]"),
            ["name_alt"]=utils:text(e:selectFirst("h2"),""):match("[а-яА-Я].*[а-яА-Я]"),
            ["author"]=JSONObject.new():put(utils:text(e:select("div.related_row"):get(1):selectFirst("a")),utils:attr(e:select("div.related_row"):get(1):selectFirst("a"),"abs:href")),
            ["genres"]=utils:text(e:select("div.genre")),
            ["description"]=utils:text(e:select("div.tags")),
            ["thumbnail"]=host..select(1,utils:attr(e:selectFirst("img"),"src"):match("/manga.*"):gsub("_blur",""))
        }
        n=n+(e and 1 or 0)
    end
    return similar
end