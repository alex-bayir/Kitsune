---
--- Generated by Luanalysis
--- Created by Аlex Bayir.
--- DateTime: 09.01.2022 19:08
---

version="1.5"
domains={"mintmanga.live","mintmanga.com"}
domain=domains[1]
source="MintManga"
Type="Manga"
description="Источник манги для взрослых. Присутствует яой. Пожалуйста отключите этот источник если вам меньше 18. Также рекомендуется его отключить,если в рекомендациях попадается яой манга."
host="https://"..domain
auth_tokens={"JSESSIONID"}

Filters={["Высокий рейтинг"]="s_high_rate", ["Переведено"]="s_translated", ["Завершённая"]="s_completed",["Для взрослых"]="s_mature",["Сингл"]="s_single",["Длинная"]="s_many_chapters",["Ожидает загрузки"]="s_wait_upload",["Продаётся"]="s_sale"}
filters={[1]="s_high_rate"}
Genres={["Боевик"]="el_1346",["Боевые искусства"]="el_1334",["Гарем"]="el_1333",["Гендерная интрига"]="el_1347",["Героическое фэнтези"]="el_1337",["Детектив"]="el_1343",["Дзёсэй"]="el_1349",["Драма"]="el_1310",["Игра"]="el_5229",["История"]="el_1311",["Исэкай"]="el_6420",["Киберпанк"]="el_1351",["Комедия"]="el_1328",["Меха"]="el_1318",["Научная фантастика"]="el_1325",["Омегаверс"]="el_5676",["Повседневность"]="el_1327",["Постапокалиптика"]="el_1342",["Приключения"]="el_1322",["Психология"]="el_1335",["Романтика"]="el_1313",["Самурайский боевик"]="el_1316",["Сверхъестественное"]="el_1350",["Сёдзё"]="el_1314",["Сёдзё-ай"]="el_1320",["Сёнэн"]="el_1326",["Сёнэн-ай"]="el_1330",["Спорт"]="el_1321",["Сэйнэн"]="el_1329",["Сянься"]="el_6631",["Трагедия"]="el_1344",["Триллер"]="el_1341",["Ужасы"]="el_1317",["Уся"]="el_6632",["Фэнтези"]="el_1323",["Школа"]="el_1319",["Эротика"]="el_1340",["Этти"]="el_1354",["Юри"]="el_1315",["Яой"]="el_1336"}
Tags={["Спортивное тело"]="6612",["Спасение мира"]="6611",["Офисные Работники"]="6594",["Традиционные игры"]="6616",["Ранги силы"]="6604",["ГГ женщина"]="6551",["Остров"]="6639",["Разумные расы"]="6603",["Культивация"]="6574",["Ангелы"]="6529",["Демоны"]="6560",["Злые духи"]="6567",["ГГ мужчина"]="6553",["ГГ имба"]="6552",["Волшебники"]="6547",["Игровые элементы"]="6569",["Система"]="6609",["Якудза"]="6624",["Брат и сестра"]="6538",["Империи"]="6570",["Месть"]="6582",["Медицина"]="6581",["Мафия"]="6580",["Насилие"]="6587",["Путешествие во времени"]="6602",["Амнезия"]="6528",["Средневековье"]="6613",["Гильдии"]="6555",["Магия"]="6579"}

function set_domain(new_domain)
    domain=new_domain
    host="https://"..domain
end

function update(url)
    url=url:gsub("https?:[\\/][\\/][^\\/]+",host)
    local e=network:load_as_Document(url):selectFirst("div.leftContent")
    local list=e:select("table.table-hover"):select("tr.item-row")
    local chapters={}; local last=list:size()-1
    for i=last,0,-1 do
        local elem=list:get(i);
        chapters[last-i]={vol=num(elem:attr("data-vol")),num=num(elem:attr("data-num"))/10,name=elem:select("td.item-title"):text():match("%d+%s%-%s%d+%s+(.+)"),date=utils:parseDate(elem:select("td.date"):attr("data-date"),"dd.MM.yy")}
    end
    local author={}; local authors=e:select("span.elem_author"):select("a[href~=/list/person/]")
    for j=0,authors:size()-1,1 do
        local a=authors:get(j); author[a:text()]=a:attr("abs:href")
    end
    return {
        ["url"]=url,
        ["url_web"]=url,
        ["name"]=utils:text(e:selectFirst("span.eng-name"),e:selectFirst("span.name"):text()),
        ["name_alt"]=utils:text(e:selectFirst("span.name")),
        ["author"]=author,
        ["genres"]=utils:text(e:select("div.subject-meta"):select("a[href*=/genre/]"),"",", "),
        ["tags"]=utils:text(e:select("div.subject-meta"):select("a[href*=/tag/]"),"",", "),
        ["rating"]=num(e:selectFirst("span.rating-block"):attr("data-score")),
        ["status"]=status(utils:text(e:selectFirst("div.subject-meta"):selectFirst("span.text-info"))),
        ["description"]=utils:text(e:selectFirst("div.manga-description")),
        ["thumbnail"]=e:selectFirst("div.picture-fotorama"):selectFirst("img"):attr("src"),
        ["chapters"]=chapters,
        ["similar"]=similar(e:select("div[class~=(tile|simple-tile)]"))
    }
end

function query(name,page,params)
    local url=network:url_builder(host.."/search/advancedResults"):add("q",name):add("offset",page*50)
    if(params~=nil and #params>0) then
        if(type(params[1])=="userdata" and Options:equals(params[1]:getClass())) then
            url:add(params[1]:getSelected(),"in"):add(params[1]:getDeselected(),"ex")
            if(#params>1) then url:add("many-el_40",params[2]:getSelected()) end
            if(#params>2) then url:add(params[3]:getSelected(),"in"):add(params[3]:getDeselected(),"ex") end
        else
            url:add(filters[params[1]],"in")
        end
    end
    url=url:build()
    if(name~=nil and name:match("[a-z]://[^ >,;]*")~=nil) then url=name; end
    return query_url(url)
end

function query_url(url,page)
    if page then url=url:find("offset=") and url:gsub("offset=%d+","offset="..tostring(page*50)) or url.."&offset="..tostring(page*50) end
    print(url)
    local selects=network:load_as_Document(url):select("div.tile")
    local list={}
    for i=0,selects:size()-1,1 do
        local e=selects:get(i)
        local author={}; local authors=e:select("span.elem_author"):select("a[href~=/list/person/]")
        for j=0,authors:size()-1,1 do
            local a=authors:get(j); author[a:text()]=a:attr("abs:href")
        end
        list[i]={
            ["url"]=e:selectFirst("a.non-hover"):attr("abs:href"),
            ["url_web"]=e:selectFirst("a.non-hover"):attr("abs:href"),
            ["name"]=utils:text(e:selectFirst("h4"),utils:text(e:selectFirst("h3"))),
            ["name_alt"]=utils:text(e:selectFirst("h3")),
            ["author"]=author,
            ["genres"]=utils:text(e:select("a.element-link"),""):gsub(" ",", "),
            ["rating"]=num(utils:attr(e:selectFirst("div.rating"),"title",""):match("(.-)%s"))/2,
            ["description"]=utils:text(e:selectFirst("div.manga-description")),
            ["thumbnail"]=e:selectFirst("img.lazy"):attr("data-original")
        }
    end
    return list
end

function getPages(url,chapter)
    local array=JSONArray:create(network:load_as_Document(url.."/vol"..chapter["vol"].."/"..chapter["num"].."?mtr=1"):select("script"):toString():match("rm_h.initReader.*(%[%[.*%]%])"):gsub("\'","\""))
    local pages={}
    for i=0,array:size()-1,1 do
        local ja=array:getArray(i)
        pages[i]={["page"]=i+1,["data"]=ja:getString(0)..ja:getString(2)}
    end
    return pages
end

function load(file,data,url,cancel,process)
    local error=network:load(network:getClient(),data,domain,file,cancel,process)
    if(error~=nil and network:load(network:getClient(),data:match("([^?]+)"),domain,file,cancel,process)==nil) then
        return nil
    end
    return error
end

function createAdvancedSearchOptions()
    return {
        {mode=2,title="Жанры",values=Genres},
        {mode=1,title="Теги",values=Tags},
        {mode=2,title="Фильтры",values=Filters}
    }
end

function similar(elements)
    local similar={}; local n=0
    for i=0,(elements~=nil and elements:size() or 0)-1,1 do
        local e=elements:get(i):selectFirst("a")
        local img=e and e:selectFirst("img.lazy")
        similar[n]=img and {
            ["url"]=e:attr("abs:href"),
            ["url_web"]=e:attr("abs:href"),
            ["name"]=img:attr("alt"),
            ["name_alt"]=img:attr("title"),
            ["thumbnail"]=img:attr("data-original")
        }
        n=n+(img and 1 or 0)
    end
    return similar
end

function status(status)
    return ({["запланирован"]="Announce",["выпуск продолжается"]="Ongoing",["приостановлен"]="Paused",["прекращён"]="Stopped",["завершено"]="Finished"})[status]
end